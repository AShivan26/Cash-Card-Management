plugins {
	id 'java'
	id 'org.springframework.boot' version '3.3.3-SNAPSHOT'
	id 'io.spring.dependency-management' version '1.1.6'
	id "com.github.spotbugs" version "5.1.3"
}

group = 'com.example'
version = '0.0.1-SNAPSHOT'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(22)
		//test
	}
}

repositories {
	mavenCentral()
	maven { url 'https://repo.spring.io/snapshot' }
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-web'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'

	//lombok
	compileOnly 'org.projectlombok:lombok:1.18.30'
	annotationProcessor 'org.projectlombok:lombok:1.18.30'
	testAnnotationProcessor 'org.projectlombok:lombok:1.18.30'

	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
}
/**
 * Apply SpotBugs to the code before even running the testcases
 */
apply from: 'gradle/build.spotbugs.gradle'
tasks.named('test') {
	useJUnitPlatform()
	afterTest { desc, result ->
		logger.quiet "Running ${desc.className}.${desc.name}: ${result.resultType}"
	}

	testLogging {
		exceptionFormat = 'full'
		afterSuite { desc, result ->
			if (!desc.parent) {
				def output = "Result: ${result.resultType}, Total: ${result.testCount}, " +
						"(Success: ${result.successfulTestCount} , Failure: ${result.failedTestCount}, Skipped: ${result.skippedTestCount})"
				def startItem = '|  ', endItem = '  |'
				def repeatLength = startItem.length() + output.length() + endItem.length()
				println('\n' + ('-' * repeatLength) + '\n' + startItem + output + endItem + '\n' + ('-' * repeatLength))
			}
		}
	}
}
